@using DevOpsSolution.Models;
@model DevOpsSolution.Models.RegisterViewModel
@{
    ViewBag.Title = "Create New User";
}
@*@{
    Layout = "~/Views/Shared/_AdminLteLayout.cshtml";}*@


@using (Html.BeginForm("Register", "Account", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
{
    @Html.AntiForgeryToken()

    <hr />
    @Html.ValidationSummary()

    if (!string.IsNullOrEmpty(Convert.ToString(ViewData["Success"])))
    {
        <div class="alert alert-success alert-dismissable" id="alertlabel">
            <a href="#" class="close" data-dismiss="alert" aria-label="close">&times;</a>
            <strong>@ViewData["Success"]</strong>
        </div>
    }
    <div class="form-group invoice-col">
        @Html.LabelFor(m => m.FirstName, new { @class = "col-md-2 control-label" })
        <div class="col-md-10 invoice-col">
            @Html.TextBoxFor(m => m.FirstName, new { @class = "form-control" })
        </div>
    </div>
    <div class="form-group invoice-col">
        @Html.LabelFor(m => m.LastName, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.LastName, new { @class = "form-control" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.UserName, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.UserName, new { @class = "form-control" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.Password, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.PasswordFor(m => m.Password, new { @class = "form-control" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.ConfirmPassword, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control" })
        </div>
    </div>

    //Add the LastName, FirstName, and Email Properties:



    <div class="form-group">
        @Html.LabelFor(m => m.Email, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.Email, new { @class = "form-control" })
        </div>
    </div>

    //dropdown list  -- select orgNames
    <div class="form-group">
        @Html.Label("Organization", "",new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.DropDownListFor(m => m.OrgId, Model.Organizations, "Select Organization", new { @class = "form-control", Id = "orgName" })
        </div>
    </div>

    <div class="form-group">
        @Html.Label("Org Level","" ,new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.DropDownListFor(m => m.OrgLevelTypeId, Model.orgLevelTypes, "Select Org Levels",
           new { @class = "form-control", Id = "orgLeveltypes", @onchange = "GetOrgUnits()" })
        </div>
    </div>


    <div class="form-group">
        @Html.Label("Org Unit","", new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.DropDownListFor(m => m.OrgLevelid, new SelectList(Enumerable.Empty<SelectListItem>(), "Id", "Name"),
                   "Select Org Unit", new { @class = "form-control", Id = "orgUnits" })
        </div>
    </div>
    <div class="form-group">
        <div class="col-md-1"><input type="submit" class="bg-blue-active" value="Register" /></div>
        <div class="col-md-1"><input type="button" name="Cancel" id="cancelbtn" value="Cancel" class="btn-default text-blue" onclick="location.href='@Url.Action("Index", "Account")'" /></div>
        <div class="col-md-offset-2 col-md-10">
            <span>
                @Html.ActionLink("Back to List", "Index")
            </span>
        </div>
    </div>
}

<script>
    function GetOrgUnits() {
        var orgid = $('#orgName').val();
        var orgleveltypeid = $('#orgLeveltypes').val();
    $.ajax({
        url: '@Url.Action("GetOrgUnits","Account")',
        type: "GET",
        dataType: "JSON",
        data: { orgId: orgid, orgleveltypeid :orgleveltypeid},
        success: function (orgUnits) {
            console.log(orgUnits);
            $("#orgUnits").html(""); // clear before appending new list
            $.each(orgUnits, function (i, unit) {
                $("#orgUnits").append(
                    $('<option></option>').val(unit.Id).html(unit.Name));
                console.log(unit.Id);
                console.log(unit.Name);
            });
        }
    });
  }
</script>

